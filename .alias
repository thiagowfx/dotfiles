#!/bin/sh

# This function sets an environment variable iff its correlated program
# is installed and/or if a given file exists on the system.
#
# Arguments:
#  $1: the environment variable (e.g. EDITOR)
#  $2: its value
#  $3: a program (e.g. vim or /usr/bin/vim)
#  $4: a file (e.g. $HOME/directory)
#
addenv() {
    [[ "x$3" != "x" ]] && ! command -v "$3" &>/dev/null && return
    [[ "x$4" != "x" ]] && [ ! -e "$4" ] && return
    export "$1"="$2"
}

# This function creates an alias iff the specified program and/or a given file
# exists on the system.
#
# Arguments:
#  $1: the alias
#  $2: its value
#  $3: a program (e.g. vim or /usr/bin/vim)
#  $4: a file (e.g. $HOME/directory)
#
addalias() {
  [[ "x$3" != "x" ]] && ! command -v "$3" &>/dev/null && return
  [[ "x$4" != "x" ]] && [ ! -e "$4" ] && return
  alias "$1"="$2"
}

# Templates are functions/snippets for general use.
# They are aliased preceded with "t-".
#
# The first argument should be a function defined internally, preceded with _.
#
# A program can be optionally specified as second argument; if it is not found
# in the PATH, then the template won't be defined.
#
# Arguments:
#  $1: template name
#  $2: a program (e.g. vim or /usr/bin/vim)
#
addtemplate() {
  [[ "x$2" != "x" ]] && ! command -v "$2" &>/dev/null && return
  alias "t-$1"="_$1"
}

#
# environment variables
#

addenv _JAVA_OPTIONS "-Dawt.useSystemAAFontSettings=on -Dswing.aatext=true -Dswing.defaultlaf=com.sun.java.swing.plaf.gtk.GTKLookAndFeel -Dswing.crossplatformlaf=com.sun.java.swing.plaf.gtk.GTKLookAndFeel -Dswing.defaultlaf=com.sun.java.swing.plaf.gtk.GTKLookAndFeel"

# asp (https://github.com/falconindy/asp) -- for Arch Linux
addenv ASPROOT "$HOME/.asp" asp

# system-wide editor
addenv EDITOR "vim" vim

# enable colors for google test
addenv GTEST_COLOR "YES"

# bash: don't add two equal consecutive commands in bash history (add just one)
addenv HISTCONTROL "ignoreboth" bash

# zsh: commands beginning with blank spaces doesn't go to the history
addenv HIST_IGNORE_SPACE zsh

# user scripts/programs
addenv PATH "$HOME/.bin:$PATH" "" "$HOME/.bin"

# system-wide editor
addenv VISUAL "$EDITOR"

# wine environment configuration
addenv WINEARCH "win32" wine
addenv WINEDEBUG "fixme-all,warn+all" wine
addenv WINEDLLOVERRIDES "winemenubuilder.exe=d" wine
addenv WINEPREFIX "$HOME/.wine" wine

#
# aliases
#

# I use PulseAudio
addalias alsamixer "alsamixer -c 0" alsamixer

# more verbose ch*
addalias chmod "chmod -v" chmod
addalias chown "chown -v" chown

# more verbose curl
addalias curl "curl -v -L" curl

# unified diff output
addalias diff "diff -uN" diff

# if colordiff is present, colored and unified diff output
addalias diff "colordiff -uN" colordiff
addalias colordiff "colordiff -uN" colordiff

# more intuitive cower
addalias cower "cower --color=always --sort=votes --target=$HOME/.aur" cower "$HOME/.aur"

# more human df
addalias df "df -h" df

# more human du
addalias du "du -h" du

# more human free
addalias free "free -h" free

# colored grep
addalias grep "grep --color=always" grep

# canonical hexdump output
addalias hexdump "hexdump -C" hexdump

# more efficient make
addalias make "time make -j$(($(nproc)+1)) -l$(($(nproc)+1))" make

# more verbose netstat
addalias netstat "netstat -pln" netstat

# automatic packer
addalias packer "packer --noconfirm" packer

# more intuitive pgrep
addalias pgrep "pgrep -afl" pgrep

# more useful xclip
addalias xclip "xclip -selection clipboard" xclip

#
# simple aliases
#

# typos
alias sl="ls"

# more verbose basic system commands
alias cp="cp -v"
alias ln="ln -v"
alias mv="mv -v"

#
# templates
#

# adbsync for android
_adbsync() {
    if [[ ! -d "$1" ]]; then
        cat <<EOF
  Purpose: to sync a directory in your computer with one in your android. For now, it is just an one-way sync (computer -> android). TODO: full, efficient rsync-like sync
  Usage: adbsync <localdir>
  Example: adbsync $HOME/toAndroid
  Remember connecting your device first:
    adb connect 192.168.0.*
EOF
        return 0
    fi
    local TARGET_DIR="/storage/sdcard1/adbsync"
    adb wait-for-device
    adb shell "[[ ! -d ${TARGET_DIR} ]] && mkdir -p ${TARGET_DIR}"
    adb push "$1" "${TARGET_DIR}/$(basename $1)" && echo "Files successfully copied."
}
addtemplate adbsync adb

# cmake clean build directory
_cmake-clean() {
    [[ -d ../build ]] && cd ..
    rm -rf build && mkdir build && cd build
}
addtemplate cmake-clean cmake

# pcap file visualization
_ctf-pcap-view-tshark() {
    tshark -r "$@" -V
}
addtemplate ctf-pcap-view-tshark tshark

_ctf-pcap-view-tcpdump() {
    tcpdump -qns 0 -X -r "$@"
}
addtemplate ctf-pcap-view-tcpdump tcpdump

_ctf-pcap-view-tcpdump2() {
    tcpdump -qns 0 -A -r "$@"
}
addtemplate ctf-pcap-view-tcpdump2 tcpdump

# ffmpeg x11 screencasting
_ffmpeg-screencast() {
    ffmpeg -f x11grab -s $(xdpyinfo | awk '/dimensions:/ {print $2}') -r 25 -i :0.0 -qscale 0 $HOME/ffmpeg-out-$(date '+%Y-%m-%d-%H-%M-%S').mkv
}
addtemplate ffmpeg-screencast ffmpeg

# ffmpeg x11 screencasting with audio
_ffmpeg-screencast-audio() {
    ffmpeg -f alsa -i pulse -acodec pcm_s16le -f x11grab -s $(xdpyinfo | awk '/dimensions:/ {print $2}') -r 25 -i :0.0 -qscale 0 $HOME/ffmpeg-out-$(date '+%Y-%m-%d-%H-%M-%S').mkv
}
addtemplate ffmpeg-screencast-audio ffmpeg

# ffmpeg clean video
_ffmpeg-clean-video() {
    ffmpeg -ss 10 -t 120 -i "$1" -acodec copy -vcodec copy "$2"
}
addtemplate ffmpeg-clean-video ffmpeg

# generate random password
_generate-random-password() {
    dd if=/dev/urandom bs=1 count="${1:-16}" 2>/dev/null | base64
}
addtemplate generate-random-password dd

# chroot: gentoo style
_gentoo-chroot() {
    [[ "$1" == "" ]] && echo "Example usage:\ngentoo-chroot /mnt/gentoo" && return 0
    [[ ! -d "$1"  ]] && echo "Your specified path $1 doesn't exist" && return 1
    sudo cp -L /etc/resolv.conf "$1"/etc/resolv.conf
    sudo mount -o bind /proc "$1"/proc
    sudo mount --rbind /dev  "$1"/dev
    sudo mount --rbind /sys  "$1"/sys
    sudo chroot "$1/" /bin/env -i TERM=$TERM /bin/bash
}
addtemplate gentoo-chroot chroot

# gitignore.io. Example usage: gi ruby,rails
_gi() {
    curl "http://www.gitignore.io/api/$@"
}
addtemplate gi curl

# get public IP address
_ip() {
    dig +short myip.opendns.com @resolver1.opendns.com
}
addtemplate ip dig

# apt-get like build-dep
_pacman-build-dep() {
    sudo pacman -S $(expac -S "%E" "$@")
}
addtemplate pacman-build-dep pacman

# get extra packages installed on the pacman-based system
_pacman-extrapkgs() {
    comm -23 <(pacman -Qeq|sort) <(pacman -Qgq base base-devel|sort)
}
addtemplate pacman-extrapkgs pacman

# makepkg: clean out build leftovers
_makepkg-clean() {
  echo "--> Cleaning up makepkg files..."
  makepkg -code

  echo "--> Removing any left out AUR tarballs..."
  find . -name '*.src.tar.gz' -exec rm {} \;

  echo "--> Removing any created packages..."
  find . -name '*.pkg.tar.xz' -exec rm {} \;
}
addtemplate makepkg-clean makepkg

# pacman: given a specific full-path file, get a diff between he
# current one on the system and the one in its respective package
_pacman-diff-file() {
    if [[ "$1" == "" ]]; then
        cat <<EOF
  Purpose: get the changes between this file now and in the upstream package
  Usage: qkkdiff-file <file>
  Example: qkkdiff-file /etc/pacman.conf"
EOF
    elif [[ -f "$1" ]]; then
        pkg="$(pacman -Qo $1 | awk '//{printf "%s-%s", $(NF-1), $NF;}')"
        bsdtar -xOf /var/cache/pacman/pkg/${pkg}-$(uname -m).pkg.tar.xz "${1/\//}" | diff - "$1"
        return 0
    else
        echo "The provided file \e[0;31m${1}\e[0m does not exist."
        return 1
    fi
}
addtemplate pacman-diff-file pacman

# pacman: given a package name, get differences between the files it contain
# and the ones in the system
_pacman-diff-pkg() {
    if [[ "$1" == "" ]]; then
        echo <<EOF
  Purpose: get the changes between the upstream package and the files on the filesystem
  Usage: qkkdiff <package>
  Example: qkkdiff pacman
EOF
    elif ! pacman -Q "$1"; then
        return 1
    else
        ver=$(pacman -Q "$1" | cut -f2 -d' ')
        pacman -Qkkq "$1" | while read package file; do echo $file; bsdtar -xOf /var/cache/pacman/pkg/${package}-${ver}-$(uname -m).pkg.tar.xz ${file/\//} | diff - $file  ; done
        return 0
    fi
}
addtemplate pacman-diff-pkg pacman

# set a proxy server
function _proxy-on() {
    export no_proxy="localhost,127.0.0.1,localaddress,.localdomain.com"

    if (( $# > 0 )); then
        valid=$(echo $@ | sed -n 's/\([0-9]\{1,3\}.\)\{4\}:\([0-9]\+\)/&/p')
        if [[ $valid != $@ ]]; then
            >&2 echo "Invalid address"
            return 1
        fi

        export http_proxy="http://$1/"
        export HTTP_PROXY=$http_proxy
        export https_proxy=$http_proxy
        export HTTTS_PROXY=$http_proxy
        export ftp_proxy=$http_proxy
        export FTP_PROXY=$http_proxy
        export rsync_proxy=$http_proxy
        export RSYNC_PROXY=$http_proxy
        echo "Proxy environment variables set."
        return 0
    fi

    echo -n "username: "; read username
    if [[ $username != "" ]]; then
        echo -n "password: "
        read -es password
        local pre="$username:$password@"
    fi

    echo -n "server: "; read server
    echo -n "port: "; read port
    export http_proxy="http://$pre$server:$port/"
    export HTTP_PROXY="http://$pre$server:$port/"
    export https_proxy=$http_proxy
    export HTTPS_PROXY=$http_proxy
    export ftp_proxy=$http_proxy
    export FTP_PROXY=$http_proxy
    export rsync_proxy=$http_proxy
    export RSYNC_PROXY=$http_proxy
}
addtemplate proxy-on

# unset proxy servers
function _proxy-off(){
    unset http_proxy
    unset HTTPS_PROXY
    unset http_proxy
    unset HTTP_PROXY
    unset ftp_proxy
    unset FTP_PROXY
    unset rsync_proxy
    unset RSYNC_PROXY
    echo -e "Proxy environment variables removed."
}
addtemplate proxy-off
# ping google.com
_pingg() {
    ping google.com
}
addtemplate pingg ping

# rot13 encoding. Example usage: rot13 "hello"
_rot13() {
    echo "$@" | tr A-Za-z N-ZA-Mn-za-m
}
addtemplate rot13 tr

# wget all pdfs from a domain
_wget-pdf() {
    wget -e robots=off -A pdf -mpEkK -np -t inf -T 60 --
}
addtemplate wget-pdf wget

# enhance a wine's WINEPREFIX by bootstrapping some programs with winetricks
_winetricks-bootstrap() {
    winetricks corefonts d3dx10 flash vcrun2005 vcrun2008 vcrun2010 vb6run
}
addtemplate winetricks-bootstrap winetricks

# upgrade a Unix system
_world() {
    [ -e /etc/arch-release ] && sudo pacman -Syu && return
    [ -e /etc/gentoo-release ] &&  su -c "emerge --sync && emerge -avuDN --with-bdeps y --keep-going @world && emerge -v --depclean && revdep-rebuild -v && etc-update && eclean -d distfiles" && return
    [ -e /etc/ubuntu-release ] && sudo aptitude update && sudo aptitude upgrade && sudo aptitude full-upgrade && return
}
addtemplate world

_world-aur() {
    command -v packer &>/dev/null && packer -Syu && return
}
addtemplate world-aur

# xrandr turn on hdmi for laptop
_xrandr-laptop-hdmi-on() {
    xrandr --output LVDS1 --primary --output HDMI1 --auto --left-of LVDS1
}
addtemplate xrandr-laptop-hdmi-on xrandr

# xrandr turn off hdmi for laptop
_xrandr-laptop-hdmi-off() {
    xrandr --output HDMI1 --off
}
addtemplate xrandr-laptop-hdmi-off xrandr

# xrandr mirror displays (hdmi) for laptop
_xrandr-laptop-hdmi-mirror() {
    xrandr --output LVDS1 --primary --auto --output HDMI1 --auto --same-as LVDS1
}
addtemplate xrandr-laptop-hdmi-mirror xrandr

# xrandr reset resolution for laptop
_xrandr-laptop-reset() {
    xrandr --output LVDS1 --primary --mode 1366x768
}
addtemplate xrandr-laptop-reset xrandr

# youtube-dl: download video as mp3
_ytdl-mp3() {
    youtube-dl --continue --title --restrict-filenames --extract-audio --audio-format mp3 "$@"
}
addtemplate ytdl-mp3 youtube-dl

# youtube-dl: download video
_ytdl-video() {
    youtube-dl --continue --title --restrict-filenames "$@"
}
addtemplate ytdl-video youtube-dl

# remember me of those utilities
_remember-me() {
    echo "- dtrx for universal extraction"
}
addtemplate remember-me
