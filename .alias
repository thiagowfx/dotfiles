# -*- shell-script -*-

# This function sets an environment variable iff its correlated program
# is installed and/or if a given file exists on the system.
#
# Arguments:
#  $1: the environment variable (e.g. EDITOR)
#  $2: its value
#  $3: a program (e.g. vim or /usr/bin/vim)
#  $4: a file (e.g. $HOME/directory)
#
addenv() {
    [[ "x$3" != "x" ]] && ! command -v "$3" &>/dev/null && return
    [[ "x$4" != "x" ]] && [ ! -e "$4" ] && return
    export "$1"="$2"
}

# This function creates an alias iff the specified program and/or a given file
# exists on the system.
#
# Arguments:
#  $1: the alias
#  $2: its value
#  $3: a program (e.g. vim or /usr/bin/vim)
#  $4: a file (e.g. $HOME/directory)
#
addalias() {
  [[ "x$3" != "x" ]] && ! command -v "$3" &>/dev/null && return
  [[ "x$4" != "x" ]] && [ ! -e "$4" ] && return
  alias "$1"="$2"
}

#
# environment variables
#

# asp (https://github.com/falconindy/asp) -- for Arch Linux
addenv ASPROOT "$HOME/.asp" asp

# system-wide editor
addenv EDITOR "vim" vim

# enable colors for google test
addenv GTEST_COLOR "YES" gtest

# don't add two equal consecutive commands in bash history (add just one)
addenv HISTCONTROL "ignoreboth" bash

# user scripts/programs
addenv PATH "$HOME/.bin:$PATH" "" "$HOME/.bin"

# ruby programs (through rubygems)
addenv PATH "$HOME/.bin/ruby:$PATH" "" "$HOME/.bin/ruby"

# system-wide editor
addenv VISUAL "$EDITOR"

# wine environment configuration
addenv WINEARCH "win64" wine
addenv WINEDEBUG "fixme-all,warn+all" wine
addenv WINEDLLOVERRIDES "winemenubuilder.exe=d" wine
addenv WINEPREFIX "$HOME/.wine" wine

#
# aliases
#

# I use PulseAudio
addalias alsamixer "alsamixer -c 0" alsamixer

# more verbose ch*
addalias chmod "chmod -v" chmod
addalias chown "chown -v" chown

# more verbose curl
addalias curl "curl -v -L" curl

# unified diff output
addalias diff "diff -uN" diff

# if colordiff is present, colored and unified diff output
addalias diff "colordiff -uN" colordiff
addalias colordiff "colordiff -uN" colordiff

# more intuitive cower
addalias cower "cower --color=always --sort=votes --target=$HOME/.aur" cower "$HOME/.aur"

# more human df
addalias df "df -h" df

# more human du
addalias du "du -h" du

# more human free
addalias free "free -h" free

# colored grep
addalias grep "grep --color=always" grep

# canonical hexdump output
addalias hexdump "hexdump -C" hexdump

# more verbose netstat
addalias netstat "netstat -pln" netstat

# automatic packer
addalias packer "packer --noconfirm" packer

# more intuitive pgrep
addalias pgrep "pgrep -afl" pgrep

# more useful xclip
addalias xclip "xclip -selection clipboard" xclip

# upgrade Arch system
addalias world "sudo pacman -Syu" world

#
# simple aliases
#

# typos
alias sl="ls"

# more verbose basic system commands
alias cp="cp -v"
alias ln="ln -v"
alias mv="mv -v"

addtemplate() {
  alias "t-$1"="$2"
}

addtemplate "ffmpeg-screencast" "ffmpeg -f x11grab -s wxga -r 30 -i :0.0 -qscale 0 $HOME/Videos/out-$(date '+%Y-%m-%d-%H-%M-%S').mpg"
addtemplate "ip" "dig +short myip.opendns.com @resolver1.opendns.com"
addtemplate "pacman-extrapkgs" "comm -23 <(pacman -Qeq|sort) <(pacman -Qgq base base-devel|sort)"
addtemplate "pingg" "ping google.com"
addtemplate "wget-pdf" "wget -e robots=off -A pdf -mpEkK -np -t inf -T 60 --"
addtemplate "wget-spider" "wget -e robots=off -w 2 --random-wait -r -H --spider --timestamping -t 5 -T 5 -l 10 --"
addtemplate "winetricks-bootstrap" "winetricks corefonts d3dx10 flash vcrun2005 vcrun2008 vcrun2010 vb6run"
addtemplate "world-apt" "sudo aptitude update && sudo aptitude upgrade && sudo aptitude full-upgrade"
addtemplate "world-aur" "packer -Syu --noconfirm"
addtemplate "world-portage" 'su -c "emerge --sync && emerge -avuDN --with-bdeps y --keep-going @world && emerge -v --depclean && revdep-rebuild -v && etc-update && eclean -d distfiles"'
addtemplate "xrandr-hdmi-on" "xrandr --output LVDS1 --primary --output HDMI1 --auto --left-of LVDS1"
addtemplate "xrandr-hdmi-off" "xrandr --output HDMI1 --off"
addtemplate "xrandr-hdmi-mirror" "xrandr --output LVDS1 --primary --auto --output HDMI1 --auto --same-as LVDS1"
addtemplate "xrandr-reset" "xrandr --output LVDS1 --primary --mode 1366x768"
addtemplate "ytdl-mp3" "youtube-dl --continue --title --restrict-filenames --extract-audio --audio-format mp3"
addtemplate "ytdl-video" "youtube-dl --continue --title --restrict-filenames"

# gitignore.io
# Example usage: 
#   gi emacs,vim,c
gi() { curl "http://www.gitignore.io/api/$@"; }

# rot-13 encoding
# Example usage:
#   rot13 "hello world"
alias rot13="tr A-Za-z N-ZA-Mn-za-m"

# third-party tools / enhancements
addtool() {
  [[ -f "$@" ]] && source "$@"
}

addtool "/usr/lib/z.sh"

# adbsync for android
adbsync() {
    if [[ ! -d "$1" ]]; then
        cat <<EOF
Purpose: sync a directory in your computer with one in your android. For now, it is just an one-way sync (computer -> android). TODO: full, efficient rsync-like
Usage: adbsync <localdir>
Example: adbsync $HOME/Downloads/toAndroid
Remember connecting your device first:
  adb connect 192.168.0.*
EOF
        return 0
    fi
    local TARGET_DIR="/storage/sdcard1/adbsync"
    adb wait-for-device
    adb shell "[[ ! -d ${TARGET_DIR} ]] && mkdir -p ${TARGET_DIR}"
    adb push "$1" "${TARGET_DIR}/$(basename $1)" && echo "Files successfully copied."
}

# chroot: gentoo style
gentoo-chroot() {
    [[ "$1" == "" ]] && echo "Example usage:\ngentoo-chroot /mnt/gentoo" && return 0
    [[ ! -d "$1"  ]] && echo "Your specified path $1 doesn't exist" && return 1
    sudo cp -L /etc/resolv.conf "$1"/etc/resolv.conf
    sudo mount -o bind /proc "$1"/proc
    sudo mount --rbind /dev  "$1"/dev
    sudo mount --rbind /sys  "$1"/sys
    sudo chroot "$1/" /bin/env -i TERM=$TERM /bin/bash
}

makepkgclean() {
  echo "--> Cleaning up makepkg files..."
  makepkg -code
  echo "--> Removing any left out AUR tarballs..."
  find . -name '*.src.tar.gz' -exec rm {} \;
  echo "--> Removing any created packages..."
  find . -name '*.pkg.tar.xz' -exec rm {} \;
}

# pacman qkkdiffs
pacman-qkkdiff-file() {
    if [[ "$1" == "" ]]; then
        cat <<EOF
Purpose: get the changes between this file now and in the upstream package
Usage: qkkdiff-file <file>
Example: qkkdiff-file /etc/pacman.conf"
EOF
    elif [[ -f "$1" ]]; then
        pkg="$(pacman -Qo $1 | awk '//{printf "%s-%s", $(NF-1), $NF;}')"
        bsdtar -xOf /var/cache/pacman/pkg/${pkg}-$(uname -m).pkg.tar.xz "${1/\//}" | diff - "$1"
        return 0
    else
        echo "The provided file \e[0;31m${1}\e[0m does not exist."
        return 1
    fi
}

pacman-qkkdiff-pkg() {
    if [[ "$1" == "" ]]; then
        echo <<EOF
Purpose: get the changes between the upstream package and the files on the filesystem
Usage: qkkdiff <package>
Example: qkkdiff pacman
EOF
    elif ! pacman -Q "$1"; then
        return 1
    else
        ver=$(pacman -Q "$1" | cut -f2 -d' ')
        pacman -Qkkq "$1" | while read package file; do echo $file; bsdtar -xOf /var/cache/pacman/pkg/${package}-${ver}-$(uname -m).pkg.tar.xz ${file/\//} | diff - $file  ; done
        return 0
    fi
}

# proxy
function proxy_on() {
    export no_proxy="localhost,127.0.0.1,localaddress,.localdomain.com"

    if (( $# > 0 )); then
        valid=$(echo $@ | sed -n 's/\([0-9]\{1,3\}.\)\{4\}:\([0-9]\+\)/&/p')
        if [[ $valid != $@ ]]; then
            >&2 echo "Invalid address"
            return 1
        fi

        export http_proxy="http://$1/"
        export HTTP_PROXY=$http_proxy
        export https_proxy=$http_proxy
        export HTTTS_PROXY=$http_proxy
        export ftp_proxy=$http_proxy
        export FTP_PROXY=$http_proxy
        export rsync_proxy=$http_proxy
        export RSYNC_PROXY=$http_proxy
        echo "Proxy environment variable set."
        return 0
    fi

    echo -n "username: "; read username
    if [[ $username != "" ]]; then
        echo -n "password: "
        read -es password
        local pre="$username:$password@"
    fi

    echo -n "server: "; read server
    echo -n "port: "; read port
    export http_proxy="http://$pre$server:$port/"
    export https_proxy=$http_proxy
    export ftp_proxy=$http_proxy
    export rsync_proxy=$http_proxy
}

function proxy_off(){
    unset http_proxy
    unset https_proxy
    unset ftp_proxy
    unset rsync_proxy
    echo -e "Proxy environment variable removed."
}
